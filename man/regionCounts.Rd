% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/regionalize.R
\docType{methods}
\name{regionCounts}
\alias{regionCounts}
\alias{regionCounts,methylBase,GRanges-method}
\alias{regionCounts,methylRaw,GRanges-method}
\alias{regionCounts,methylRaw,GRangesList-method}
\alias{regionCounts,methylRawList,GRanges-method}
\alias{regionCounts,methylRawList,GRangesList-method}
\title{Get regional counts for given GRanges or GRangesList object}
\usage{
regionCounts(object,regions,cov.bases=0,strand.aware=FALSE)

\S4method{regionCounts}{methylRaw,GRanges}(object, regions, cov.bases = 0,
  strand.aware = FALSE)

\S4method{regionCounts}{methylBase,GRanges}(object, regions, cov.bases = 0,
  strand.aware = FALSE)

\S4method{regionCounts}{methylRaw,GRangesList}(object, regions, cov.bases = 0,
  strand.aware = FALSE)

\S4method{regionCounts}{methylRawList,GRanges}(object, regions, cov.bases = 0,
  strand.aware = FALSE)

\S4method{regionCounts}{methylRawList,GRangesList}(object, regions,
  cov.bases = 0, strand.aware = FALSE)
}
\arguments{
\item{object}{a \code{methylRaw} or \code{methlRawList} object}

\item{regions}{a GRanges or GRangesList object. Make sure that the GRanges objects are
unique in chr,start,end and strand columns.You can make them unique by
using unique() function.}

\item{cov.bases}{number minimum bases covered per region (Default:0).
Only regions with base coverage above this threshold are returned.}

\item{strand.aware}{if set to TRUE only CpGs that match the strand of
the region will be summarized. (default:FALSE)}
}
\value{
a new methylRaw,methylBase or methylRawList object. If \code{strand.aware} is
         set to FALSE (default). Even though the resulting object will have
         the strand information of \code{regions} it will still contain
         methylation information from both strands.
}
\description{
Convert \code{\link{methylRaw}}, \code{\link{methylRawList}} or \code{\link{methylBase}}  object into
regional counts for a given \code{\link{GRanges}} or \code{\link{GRangesList}} object.
}
\examples{
data(methylKit)

# get the windows of interest as a GRanges object, this can be any set
# of genomic locations
library(GenomicRanges)
my.win=GRanges(seqnames="chr21",
ranges=IRanges(start=seq(from=9764513,by=10000,length.out=20),width=5000) )

# getting counts per region
regional.methylRaw=regionCounts(object=methylRawList.obj, regions=my.win,
cov.bases=0,strand.aware=FALSE)
}

